version: "3.8"

services:
  frontend-server:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        API_BASE_URL: "http://localhost:5001/" # must end with slash
    restart: always
    ports:
      - 5001:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - backend-api
  backend-api:
    build:
      context: ./backend
      dockerfile: ./HeatingDataMonitor.API/Dockerfile
    restart: always
    expose:
      - 80
    environment:
      Urls: "http://+:80"
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__HeatingDataDatabase: "Server=database;Port=5432;Database=heating_data_monitor;User Id=api_user;Password=dontworrythispasswordwillchangeinproduction;Max Auto Prepare=10;Auto Prepare Min Usages=2;"
    depends_on:
      - database
  database:
    image: timescale/timescaledb:latest-pg14
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "dontworrythispasswordwillchangeinproduction"
      POSTGRES_DB: "heating_data_monitor"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/HeatingDataMonitor.Database/dbCreate.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
      - ./backend/HeatingDataMonitor.API/createDbUser.sql:/docker-entrypoint-initdb.d/02_createAPIUser.sql:ro
      - ./backend/HeatingDataMonitor.Receiver/createDbUser.sql:/docker-entrypoint-initdb.d/03_createReceiverUser.sql:ro
      - ./backend/HeatingDataMonitor.Database/importOldData.sh:/docker-entrypoint-initdb.d/04_importOldData.sh:ro
      - ./old-data.csv:/old-data.csv:ro
volumes:
  pgdata:
