// <auto-generated />
using System;
using HeatingDataMonitor.History;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HeatingDataMonitor.Migrations
{
    [DbContext(typeof(HeatingDataDbContext))]
    [Migration("20200510152025_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HeatingDataMonitor.Model.HeatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("A_EA_0")
                        .HasColumnType("integer");

                    b.Property<int?>("A_EA_1")
                        .HasColumnType("integer");

                    b.Property<int?>("A_EA_2")
                        .HasColumnType("integer");

                    b.Property<int?>("A_EA_3")
                        .HasColumnType("integer");

                    b.Property<int?>("A_EA_4")
                        .HasColumnType("integer");

                    b.Property<int?>("A_PHASE_0")
                        .HasColumnType("integer");

                    b.Property<int?>("A_PHASE_1")
                        .HasColumnType("integer");

                    b.Property<int?>("A_PHASE_2")
                        .HasColumnType("integer");

                    b.Property<int?>("A_PHASE_3")
                        .HasColumnType("integer");

                    b.Property<int?>("A_PHASE_4")
                        .HasColumnType("integer");

                    b.Property<int?>("A_W_0")
                        .HasColumnType("integer");

                    b.Property<int?>("A_W_1")
                        .HasColumnType("integer");

                    b.Property<int?>("A_W_2")
                        .HasColumnType("integer");

                    b.Property<int?>("A_W_3")
                        .HasColumnType("integer");

                    b.Property<float?>("Abgas")
                        .HasColumnType("real");

                    b.Property<float?>("Aussen")
                        .HasColumnType("real");

                    b.Property<int?>("Betriebsart_Fern_HK1")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsart_Fern_HK2")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsart_Fern_HK3")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsart_Fern_HK4")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsphase_HK1")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsphase_HK2")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsphase_HK3")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsphase_HK4")
                        .HasColumnType("integer");

                    b.Property<int?>("Betriebsphase_Kessel")
                        .HasColumnType("integer");

                    b.Property<float?>("Boiler_1")
                        .HasColumnType("real");

                    b.Property<float?>("Boiler_2")
                        .HasColumnType("real");

                    b.Property<float?>("Brennkammer")
                        .HasColumnType("real");

                    b.Property<float?>("CO2_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("CO2_Soll")
                        .HasColumnType("real");

                    b.Property<int?>("DI_0")
                        .HasColumnType("integer");

                    b.Property<int?>("DI_1")
                        .HasColumnType("integer");

                    b.Property<int?>("DI_2")
                        .HasColumnType("integer");

                    b.Property<int?>("DI_3")
                        .HasColumnType("integer");

                    b.Property<float?>("Freigabekontakt_HK1")
                        .HasColumnType("real");

                    b.Property<float?>("Freigabekontakt_HK2")
                        .HasColumnType("real");

                    b.Property<float?>("Freigabekontakt_HK3")
                        .HasColumnType("real");

                    b.Property<float?>("Freigabekontakt_HK4")
                        .HasColumnType("real");

                    b.Property<float?>("Kessel")
                        .HasColumnType("real");

                    b.Property<float?>("Platine")
                        .HasColumnType("real");

                    b.Property<float?>("Puffer_Oben")
                        .HasColumnType("real");

                    b.Property<float?>("Puffer_Unten")
                        .HasColumnType("real");

                    b.Property<float?>("Ruecklauf")
                        .HasColumnType("real");

                    b.Property<float?>("Saugzug_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("Verschiebung_Fern_HK1")
                        .HasColumnType("real");

                    b.Property<float?>("Verschiebung_Fern_HK2")
                        .HasColumnType("real");

                    b.Property<float?>("Verschiebung_Fern_HK3")
                        .HasColumnType("real");

                    b.Property<float?>("Verschiebung_Fern_HK4")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK1_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK1_Soll")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK2_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK2_Soll")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK3_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK3_Soll")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK4_Ist")
                        .HasColumnType("real");

                    b.Property<float?>("Vorlauf_HK4_Soll")
                        .HasColumnType("real");

                    b.Property<DateTime>("Zeit")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Zeit");

                    b.ToTable("HeatingData");
                });
#pragma warning restore 612, 618
        }
    }
}
